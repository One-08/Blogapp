{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://mat-contenteditable/lib/mat-contenteditable.directive.ts","ng://mat-contenteditable/lib/mat-ckeditor.directive.ts","ng://mat-contenteditable/lib/mat-ckeditor-balloon.directive.ts","ng://mat-contenteditable/lib/form-field-sizer.directive.ts","ng://mat-contenteditable/lib/mat-contenteditable.module.ts","ng://mat-contenteditable/lib/mat-ckeditor.module.ts","ng://mat-contenteditable/lib/validators.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","MatInputBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatInputMixinBase","mixinErrorState","MatContenteditableDirective","_super","elementRef","renderer","_this","call","stateChanges","Subject","id","MatContenteditableDirective_1","nextId","focused","contentEmpty","_required","_disabled","controlType","describedBy","propValueAccessor","valueAccessor","nativeElement","value","next","_placeholder","plh","includes","empty","req","coerceBooleanProperty","dis","ngDoCheck","updateErrorState","callOnChange","onChange","callOnFocused","callOnTouched","onTouched","setDescribedByIds","ids","join","onContainerClick","focus","writeValue","normalizedValue","setProperty","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","setAttribute","removeDisabledState","listen","listenerDisabledState","removeAttribute","e","preventDefault","ElementRef","Renderer2","NgControl","type","Optional","Self","NgForm","FormGroupDirective","ErrorStateMatcher","Input","HostBinding","HostListener","Directive","selector","providers","provide","MatFormFieldControl","useExisting","MatCkeditorDirective","editor","viewRef","MatCkeditorDirective_1","placeholder","required","editorInstance","getData","data","disabled","ngOnInit","blur","subscribe","editing","view","CKEditorComponent","Host","ViewContainerRef","MatCkeditorBalloonDirective","show","toolbarOpen","balloon","plugins","get","showToolbar","hide","ready","stopListening","model","document","selection","_balloon","hasView","toolbarView","listenTo","ui","updatePosition","_getBalloonPositionData","add","position","balloonClassName","MatCkeditorBalloonDirective_1","FormFieldSizerDirective","ngAfterContentInit","updateSize","infix","getElement","removeStyle","setTimeout","wrapper","offset","offsetHeight","parseFloat","getComputedStyle","marginTop","marginBottom","height","setStyle","name","getElementsByClassName","item","MatContenteditableModule","NgModule","imports","declarations","exports","MatCkeditorModule","getText","html","element","createElement","innerHTML","textContent","replace","HtmlValidators","control","minLength","text","minlength","requiredLength","actualLength","maxLength","maxlength"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n  Directive,\n  ElementRef,\n  Renderer2,\n  HostListener,\n  Input,\n  HostBinding,\n  Optional,\n  Self,\n  DoCheck,\n} from '@angular/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher, mixinErrorState, CanUpdateErrorStateCtor, CanUpdateErrorState } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\n\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nclass MatInputBase {\n  constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n              public _parentForm: NgForm,\n              public _parentFormGroup: FormGroupDirective,\n              /** @docs-private */\n              public ngControl: NgControl) {}\n}\nexport const _MatInputMixinBase: CanUpdateErrorStateCtor & typeof MatInputBase =\n  mixinErrorState(MatInputBase);\n\n\n@Directive({\n  selector: '[contenteditable]',\n  providers: [\n    { provide: MatFormFieldControl, useExisting: MatContenteditableDirective },\n  ]\n})\nexport class MatContenteditableDirective extends _MatInputMixinBase\n  implements ControlValueAccessor, MatFormFieldControl<string>, DoCheck, CanUpdateErrorState {\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * See https://material.angular.io/guide/creating-a-custom-form-field-control\n   */\n  static nextId = 0;\n\n  @Input()\n  get value(): string { return this.elementRef.nativeElement[this.propValueAccessor]; }\n  set value(value: string) {\n    if (value !== this.value) {\n      this.elementRef.nativeElement[this.propValueAccessor] = value;\n      this.stateChanges.next();\n    }\n  }\n\n  readonly stateChanges: Subject<void> = new Subject<void>();\n\n  @HostBinding() id = `mat-input-${MatContenteditableDirective.nextId++}`;\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n  private _placeholder: string;\n\n  focused = false;\n\n  @Input() contentEmpty: Array<string> = ['<br>', '<div><br></div>'];\n  get empty(): boolean {\n    return !this.value || this.contentEmpty.includes(this.value);\n  }\n\n  get shouldLabelFloat(): boolean { return this.focused || !this.empty; }\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n  private _required = false;\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(dis) {\n    this._disabled = coerceBooleanProperty(dis);\n    this.stateChanges.next();\n  }\n  private _disabled = false;\n\n  @HostBinding('attr.aria-invalid') errorState: boolean;\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  controlType = 'mat-input';\n\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n\n  // Part of ControlValueAccessor\n  private onChange: (value: string) => void;\n  private onTouched: () => void;\n  private removeDisabledState: () => void;\n\n  @Input() propValueAccessor = 'innerHTML';\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    @Optional() @Self() public ngControl: NgControl,\n    @Optional() _parentForm: NgForm,\n    @Optional() _parentFormGroup: FormGroupDirective,\n    _defaultErrorStateMatcher: ErrorStateMatcher,\n  ) {\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n    // Setting the value accessor directly (instead of using\n    // the providers) to avoid running into a circular import.\n    if (this.ngControl != null) { this.ngControl.valueAccessor = this; }\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n\n  @HostListener('input')\n  callOnChange() {\n    if (typeof this.onChange === 'function') {\n      this.onChange(this.elementRef.nativeElement[this.propValueAccessor]);\n    }\n  }\n\n  @HostListener('focus')\n  callOnFocused() {\n    if (this.focused !== true) {\n      this.focused = true;\n      this.stateChanges.next();\n    }\n  }\n\n  @HostListener('blur')\n  callOnTouched() {\n    if (typeof this.onTouched === 'function') {\n      this.onTouched();\n    }\n    if (this.focused !== false) {\n      this.focused = false;\n      this.stateChanges.next();\n    }\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick() { this.elementRef.nativeElement.focus(); }\n\n  /**\n   * Writes a new value to the element.\n   * This method will be called by the forms API to write\n   * to the view when programmatic (model -> view) changes are requested.\n   *\n   * See: [ControlValueAccessor](https://angular.io/api/forms/ControlValueAccessor#members)\n   */\n  writeValue(value: any): void {\n    const normalizedValue = value == null ? '' : value;\n    this.renderer.setProperty(this.elementRef.nativeElement, this.propValueAccessor, normalizedValue);\n  }\n\n  /**\n   * Registers a callback function that should be called when\n   * the control's value changes in the UI.\n   *\n   * This is called by the forms API on initialization so it can update\n   * the form model when values propagate from the view (view -> model).\n   */\n  registerOnChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Registers a callback function that should be called when the control receives a blur event.\n   * This is called by the forms API on initialization so it can update the form model on blur.\n   */\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * This function is called by the forms API when the control status changes to or from \"DISABLED\".\n   * Depending on the value, it should enable or disable the appropriate DOM element.\n   */\n  setDisabledState(isDisabled: boolean): void {\n    if (isDisabled) {\n      this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'true');\n      this.removeDisabledState = this.renderer.listen(this.elementRef.nativeElement, 'keydown', this.listenerDisabledState);\n    } else {\n      if (this.removeDisabledState) {\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n        this.removeDisabledState();\n      }\n    }\n  }\n\n  private listenerDisabledState(e: KeyboardEvent) {\n    e.preventDefault();\n  }\n}\n","import { Directive, Input, HostBinding, ViewContainerRef, OnInit, Optional, Self, DoCheck, Host } from '@angular/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { CKEditorComponent } from '@ckeditor/ckeditor5-angular';\nimport { Subject } from 'rxjs';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { CanUpdateErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { _MatInputMixinBase } from './mat-contenteditable.directive';\n\n\n@Directive({\n  selector: '[matCkeditor]',\n  providers: [\n    { provide: MatFormFieldControl, useExisting: MatCkeditorDirective },\n  ]\n})\nexport class MatCkeditorDirective  extends _MatInputMixinBase\n  implements MatFormFieldControl<string>, DoCheck, CanUpdateErrorState , OnInit {\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * See https://material.angular.io/guide/creating-a-custom-form-field-control\n   */\n  static nextId = 0;\n\n  @Input()\n  get value(): string {\n    return !!this.editor.editorInstance && this.editor.editorInstance.getData();\n  }\n  set value(value: string) {\n    if (value !== this.value) {\n      this.editor.data = value;\n      this.stateChanges.next();\n    }\n  }\n\n  readonly stateChanges: Subject<void> = new Subject<void>();\n\n  @HostBinding() id = `mat-input-${MatCkeditorDirective.nextId++}`;\n\n  // Need support from Ckeditor\n  @Input() placeholder = '';\n\n  @Input() contentEmpty: string[] = ['<br>', '<p>&nbsp;</p>'];\n  get empty(): boolean {\n    return !this.value || this.contentEmpty.includes(this.value);\n  }\n\n  get shouldLabelFloat(): boolean { return this.focused || !this.empty; }\n\n  focused = false;\n\n  @Input() required = false;\n\n  @Input()\n  set disabled(isDisabled: boolean) {\n    this.editor.setDisabledState(isDisabled);\n    this.stateChanges.next();\n  }\n  get disabled() {\n    return this.editor.disabled;\n  }\n\n  @HostBinding('attr.aria-invalid') errorState: boolean;\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  controlType = 'mat-input';\n\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  constructor(\n    @Host() @Self() @Optional() public editor: CKEditorComponent,\n    protected readonly viewRef: ViewContainerRef,\n    @Optional() @Self() public ngControl: NgControl,\n    @Optional() _parentForm: NgForm,\n    @Optional() _parentFormGroup: FormGroupDirective,\n    _defaultErrorStateMatcher: ErrorStateMatcher,\n  ) {\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n  }\n\n  ngOnInit() {\n    this.editor.blur.subscribe(() => {\n      this.focused = false;\n      this.stateChanges.next();\n    });\n    this.editor.focus.subscribe(() => {\n      this.focused = true;\n      this.stateChanges.next();\n    });\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick() {\n    if (this.editor.editorInstance) {\n      this.editor.editorInstance.editing.view.focus();\n      this.stateChanges.next();\n    }\n  }\n\n}\n","import { Directive, Input } from '@angular/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\n\nimport { MatCkeditorDirective } from './mat-ckeditor.directive';\n\n@Directive({\n  selector: '[matCkeditorBalloon]',\n  providers: [\n    { provide: MatFormFieldControl, useExisting: MatCkeditorBalloonDirective },\n  ]\n})\nexport class MatCkeditorBalloonDirective extends MatCkeditorDirective {\n\n  @Input()\n  set toolbar(show: boolean) {\n    if (this.editor && show !== this.toolbarOpen) {\n      const balloon = this.editor.editorInstance.plugins.get('BalloonToolbar');\n      if (show) {\n        this.showToolbar(balloon);\n      } else {\n        balloon.hide();\n        this.toolbarOpen = false;\n      }\n    }\n  }\n  private toolbarOpen: boolean;\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.editor.ready.subscribe(editor => {\n      const balloon = editor.plugins.get('BalloonToolbar');\n      balloon.stopListening(editor.model.document.selection, 'change:range');\n      balloon.stopListening(balloon, '_selectionChangeDebounced');\n    });\n    this.editor.focus.subscribe(() => {\n      if (this.toolbarOpen) {\n        const balloon = this.editor.editorInstance.plugins.get('BalloonToolbar');\n        this.showToolbar(balloon);\n      }\n    });\n  }\n\n  private showToolbar(balloon) {\n    if (!balloon._balloon.hasView(balloon.toolbarView)) {\n      balloon.listenTo(this.editor.editorInstance.ui, 'update', () => {\n        balloon._balloon.updatePosition(balloon._getBalloonPositionData());\n      });\n      balloon._balloon.add({\n        view: balloon.toolbarView,\n        position: balloon._getBalloonPositionData(),\n        balloonClassName: 'ck-toolbar-container'\n      });\n      this.toolbarOpen = true;\n    }\n  }\n\n}\n","import { Directive, Renderer2, ElementRef, AfterContentInit } from '@angular/core';\n\n@Directive({\n  selector: '[formFieldSizer]'\n})\nexport class FormFieldSizerDirective implements AfterContentInit {\n\n  constructor(\n    private readonly renderer: Renderer2,\n    private readonly elementRef: ElementRef,\n  ) { }\n\n  ngAfterContentInit(): void {\n    this.updateSize();\n  }\n\n  updateSize() {\n    const infix = this.getElement('mat-form-field-infix');\n    this.renderer.removeStyle(infix, 'min-height');\n\n    setTimeout(() => {\n      const wrapper = this.getElement('mat-form-field-wrapper');\n      const offset = this.elementRef.nativeElement.offsetHeight -\n        wrapper.offsetHeight -\n        parseFloat(getComputedStyle(wrapper).marginTop) -\n        parseFloat(getComputedStyle(wrapper).marginBottom) +\n        parseFloat(getComputedStyle(infix).height);\n\n      this.renderer.setStyle(infix, 'min-height', `${offset}px`);\n    });\n  }\n\n  private getElement(name: string): HTMLElement {\n    return this.elementRef.nativeElement.getElementsByClassName(name).item(0);\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatContenteditableDirective } from './mat-contenteditable.directive';\nimport { FormFieldSizerDirective } from './form-field-sizer.directive';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [ MatContenteditableDirective, FormFieldSizerDirective ],\n  exports: [ MatContenteditableDirective, FormFieldSizerDirective ],\n})\nexport class MatContenteditableModule { }\n","import { NgModule } from '@angular/core';\n\nimport { MatCkeditorDirective } from './mat-ckeditor.directive';\nimport { MatCkeditorBalloonDirective } from './mat-ckeditor-balloon.directive';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [ MatCkeditorDirective, MatCkeditorBalloonDirective ],\n  exports: [ MatCkeditorDirective, MatCkeditorBalloonDirective ],\n})\nexport class MatCkeditorModule { }\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\nfunction getText(html: string) {\n  if (html) {\n    const element = document.createElement('span');\n    element.innerHTML = html;\n    return element.textContent.replace(/\\s/g, '');\n  }\n  return '';\n}\n\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](/guide/form-validation)\n *\n * @publicApi\n */\nexport class HtmlValidators {\n\n  /**\n   * @description\n   * Validator that requires the control have a non-empty value.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field is non-empty\n   *\n   * ```typescript\n   * const control = new FormControl('', Validators.required);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map with the `required` property\n   * if the validation check fails, otherwise `null`.\n   *\n   */\n  static required(control: AbstractControl): ValidationErrors | null {\n    const text = getText(control.value);\n    return text ? null : { 'required': true };\n  }\n\n  /**\n   * @description\n   * Validator that requires the length of the control's value to be greater than or equal\n   * to the provided minimum length. This validator is also provided by default if you use the\n   * the HTML5 `minlength` attribute.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has a minimum of 3 characters\n   *\n   * ```typescript\n   * const control = new FormControl('ng', Validators.minLength(3));\n   *\n   * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n   * ```\n   *\n   * ```html\n   * <input minlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `minlength` if the validation check fails, otherwise `null`.\n   */\n  static minLength(minLength: number): ValidatorFn {\n    const fn = (control: AbstractControl): ValidationErrors | null => {\n      const text = getText(control.value);\n      if (text) {\n        return text.length < minLength ?\n          { 'minlength': { 'requiredLength': minLength, 'actualLength': text.length } } :\n          null;\n      }\n      return null;  // don't validate empty values to allow optional controls\n    };\n    return fn;\n  }\n\n  /**\n   * @description\n   * Validator that requires the length of the control's value to be less than or equal\n   * to the provided maximum length. This validator is also provided by default if you use the\n   * the HTML5 `maxlength` attribute.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has maximum of 5 characters\n   *\n   * ```typescript\n   * const control = new FormControl('Angular', Validators.maxLength(5));\n   *\n   * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n   * ```\n   *\n   * ```html\n   * <input maxlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `maxlength` property if the validation check fails, otherwise `null`.\n   */\n  static maxLength(maxLength: number): ValidatorFn {\n    const fn = (control: AbstractControl): ValidationErrors | null => {\n      const text = getText(control.value);\n      return text.length > maxLength ?\n        { 'maxlength': { 'requiredLength': maxLength, 'actualLength': text.length } } :\n        null;\n    };\n    return fn;\n  }\n}\n"]}