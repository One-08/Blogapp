{"version":3,"file":"mat-contenteditable.js","sources":["ng:/mat-contenteditable/lib/mat-contenteditable.directive.ts","ng:/mat-contenteditable/lib/mat-ckeditor.directive.ts","ng:/mat-contenteditable/lib/mat-ckeditor-balloon.directive.ts","ng:/mat-contenteditable/lib/form-field-sizer.directive.ts","ng:/mat-contenteditable/lib/mat-contenteditable.module.ts","ng:/mat-contenteditable/lib/mat-ckeditor.module.ts","ng:/mat-contenteditable/lib/validators.ts","ng:/mat-contenteditable/public_api.ts","ng:/mat-contenteditable/mat-contenteditable.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Renderer2,\n  HostListener,\n  Input,\n  HostBinding,\n  Optional,\n  Self,\n  DoCheck,\n} from '@angular/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher, mixinErrorState, CanUpdateErrorStateCtor, CanUpdateErrorState } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\n\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nclass MatInputBase {\n  constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n              public _parentForm: NgForm,\n              public _parentFormGroup: FormGroupDirective,\n              /** @docs-private */\n              public ngControl: NgControl) {}\n}\nexport const _MatInputMixinBase: CanUpdateErrorStateCtor & typeof MatInputBase =\n  mixinErrorState(MatInputBase);\n\n\n@Directive({\n  selector: '[contenteditable]',\n  providers: [\n    { provide: MatFormFieldControl, useExisting: MatContenteditableDirective },\n  ]\n})\nexport class MatContenteditableDirective extends _MatInputMixinBase\n  implements ControlValueAccessor, MatFormFieldControl<string>, DoCheck, CanUpdateErrorState {\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * See https://material.angular.io/guide/creating-a-custom-form-field-control\n   */\n  static nextId = 0;\n\n  @Input()\n  get value(): string { return this.elementRef.nativeElement[this.propValueAccessor]; }\n  set value(value: string) {\n    if (value !== this.value) {\n      this.elementRef.nativeElement[this.propValueAccessor] = value;\n      this.stateChanges.next();\n    }\n  }\n\n  readonly stateChanges: Subject<void> = new Subject<void>();\n\n  @HostBinding() id = `mat-input-${MatContenteditableDirective.nextId++}`;\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n  private _placeholder: string;\n\n  focused = false;\n\n  @Input() contentEmpty: Array<string> = ['<br>', '<div><br></div>'];\n  get empty(): boolean {\n    return !this.value || this.contentEmpty.includes(this.value);\n  }\n\n  get shouldLabelFloat(): boolean { return this.focused || !this.empty; }\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n  private _required = false;\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(dis) {\n    this._disabled = coerceBooleanProperty(dis);\n    this.stateChanges.next();\n  }\n  private _disabled = false;\n\n  @HostBinding('attr.aria-invalid') errorState: boolean;\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  controlType = 'mat-input';\n\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n\n  // Part of ControlValueAccessor\n  private onChange: (value: string) => void;\n  private onTouched: () => void;\n  private removeDisabledState: () => void;\n\n  @Input() propValueAccessor = 'innerHTML';\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    @Optional() @Self() public ngControl: NgControl,\n    @Optional() _parentForm: NgForm,\n    @Optional() _parentFormGroup: FormGroupDirective,\n    _defaultErrorStateMatcher: ErrorStateMatcher,\n  ) {\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n    // Setting the value accessor directly (instead of using\n    // the providers) to avoid running into a circular import.\n    if (this.ngControl != null) { this.ngControl.valueAccessor = this; }\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n\n  @HostListener('input')\n  callOnChange() {\n    if (typeof this.onChange === 'function') {\n      this.onChange(this.elementRef.nativeElement[this.propValueAccessor]);\n    }\n  }\n\n  @HostListener('focus')\n  callOnFocused() {\n    if (this.focused !== true) {\n      this.focused = true;\n      this.stateChanges.next();\n    }\n  }\n\n  @HostListener('blur')\n  callOnTouched() {\n    if (typeof this.onTouched === 'function') {\n      this.onTouched();\n    }\n    if (this.focused !== false) {\n      this.focused = false;\n      this.stateChanges.next();\n    }\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick() { this.elementRef.nativeElement.focus(); }\n\n  /**\n   * Writes a new value to the element.\n   * This method will be called by the forms API to write\n   * to the view when programmatic (model -> view) changes are requested.\n   *\n   * See: [ControlValueAccessor](https://angular.io/api/forms/ControlValueAccessor#members)\n   */\n  writeValue(value: any): void {\n    const normalizedValue = value == null ? '' : value;\n    this.renderer.setProperty(this.elementRef.nativeElement, this.propValueAccessor, normalizedValue);\n  }\n\n  /**\n   * Registers a callback function that should be called when\n   * the control's value changes in the UI.\n   *\n   * This is called by the forms API on initialization so it can update\n   * the form model when values propagate from the view (view -> model).\n   */\n  registerOnChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Registers a callback function that should be called when the control receives a blur event.\n   * This is called by the forms API on initialization so it can update the form model on blur.\n   */\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * This function is called by the forms API when the control status changes to or from \"DISABLED\".\n   * Depending on the value, it should enable or disable the appropriate DOM element.\n   */\n  setDisabledState(isDisabled: boolean): void {\n    if (isDisabled) {\n      this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'true');\n      this.removeDisabledState = this.renderer.listen(this.elementRef.nativeElement, 'keydown', this.listenerDisabledState);\n    } else {\n      if (this.removeDisabledState) {\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n        this.removeDisabledState();\n      }\n    }\n  }\n\n  private listenerDisabledState(e: KeyboardEvent) {\n    e.preventDefault();\n  }\n}\n","import { Directive, Input, HostBinding, ViewContainerRef, OnInit, Optional, Self, DoCheck, Host } from '@angular/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { CKEditorComponent } from '@ckeditor/ckeditor5-angular';\nimport { Subject } from 'rxjs';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { CanUpdateErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { _MatInputMixinBase } from './mat-contenteditable.directive';\n\n\n@Directive({\n  selector: '[matCkeditor]',\n  providers: [\n    { provide: MatFormFieldControl, useExisting: MatCkeditorDirective },\n  ]\n})\nexport class MatCkeditorDirective  extends _MatInputMixinBase\n  implements MatFormFieldControl<string>, DoCheck, CanUpdateErrorState , OnInit {\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * See https://material.angular.io/guide/creating-a-custom-form-field-control\n   */\n  static nextId = 0;\n\n  @Input()\n  get value(): string {\n    return !!this.editor.editorInstance && this.editor.editorInstance.getData();\n  }\n  set value(value: string) {\n    if (value !== this.value) {\n      this.editor.data = value;\n      this.stateChanges.next();\n    }\n  }\n\n  readonly stateChanges: Subject<void> = new Subject<void>();\n\n  @HostBinding() id = `mat-input-${MatCkeditorDirective.nextId++}`;\n\n  // Need support from Ckeditor\n  @Input() placeholder = '';\n\n  @Input() contentEmpty: string[] = ['<br>', '<p>&nbsp;</p>'];\n  get empty(): boolean {\n    return !this.value || this.contentEmpty.includes(this.value);\n  }\n\n  get shouldLabelFloat(): boolean { return this.focused || !this.empty; }\n\n  focused = false;\n\n  @Input() required = false;\n\n  @Input()\n  set disabled(isDisabled: boolean) {\n    this.editor.setDisabledState(isDisabled);\n    this.stateChanges.next();\n  }\n  get disabled() {\n    return this.editor.disabled;\n  }\n\n  @HostBinding('attr.aria-invalid') errorState: boolean;\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  controlType = 'mat-input';\n\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  constructor(\n    @Host() @Self() @Optional() public editor: CKEditorComponent,\n    protected readonly viewRef: ViewContainerRef,\n    @Optional() @Self() public ngControl: NgControl,\n    @Optional() _parentForm: NgForm,\n    @Optional() _parentFormGroup: FormGroupDirective,\n    _defaultErrorStateMatcher: ErrorStateMatcher,\n  ) {\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n  }\n\n  ngOnInit() {\n    this.editor.blur.subscribe(() => {\n      this.focused = false;\n      this.stateChanges.next();\n    });\n    this.editor.focus.subscribe(() => {\n      this.focused = true;\n      this.stateChanges.next();\n    });\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick() {\n    if (this.editor.editorInstance) {\n      this.editor.editorInstance.editing.view.focus();\n      this.stateChanges.next();\n    }\n  }\n\n}\n","import { Directive, Input } from '@angular/core';\nimport { MatFormFieldControl } from '@angular/material/form-field';\n\nimport { MatCkeditorDirective } from './mat-ckeditor.directive';\n\n@Directive({\n  selector: '[matCkeditorBalloon]',\n  providers: [\n    { provide: MatFormFieldControl, useExisting: MatCkeditorBalloonDirective },\n  ]\n})\nexport class MatCkeditorBalloonDirective extends MatCkeditorDirective {\n\n  @Input()\n  set toolbar(show: boolean) {\n    if (this.editor && show !== this.toolbarOpen) {\n      const balloon = this.editor.editorInstance.plugins.get('BalloonToolbar');\n      if (show) {\n        this.showToolbar(balloon);\n      } else {\n        balloon.hide();\n        this.toolbarOpen = false;\n      }\n    }\n  }\n  private toolbarOpen: boolean;\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.editor.ready.subscribe(editor => {\n      const balloon = editor.plugins.get('BalloonToolbar');\n      balloon.stopListening(editor.model.document.selection, 'change:range');\n      balloon.stopListening(balloon, '_selectionChangeDebounced');\n    });\n    this.editor.focus.subscribe(() => {\n      if (this.toolbarOpen) {\n        const balloon = this.editor.editorInstance.plugins.get('BalloonToolbar');\n        this.showToolbar(balloon);\n      }\n    });\n  }\n\n  private showToolbar(balloon) {\n    if (!balloon._balloon.hasView(balloon.toolbarView)) {\n      balloon.listenTo(this.editor.editorInstance.ui, 'update', () => {\n        balloon._balloon.updatePosition(balloon._getBalloonPositionData());\n      });\n      balloon._balloon.add({\n        view: balloon.toolbarView,\n        position: balloon._getBalloonPositionData(),\n        balloonClassName: 'ck-toolbar-container'\n      });\n      this.toolbarOpen = true;\n    }\n  }\n\n}\n","import { Directive, Renderer2, ElementRef, AfterContentInit } from '@angular/core';\n\n@Directive({\n  selector: '[formFieldSizer]'\n})\nexport class FormFieldSizerDirective implements AfterContentInit {\n\n  constructor(\n    private readonly renderer: Renderer2,\n    private readonly elementRef: ElementRef,\n  ) { }\n\n  ngAfterContentInit(): void {\n    this.updateSize();\n  }\n\n  updateSize() {\n    const infix = this.getElement('mat-form-field-infix');\n    this.renderer.removeStyle(infix, 'min-height');\n\n    setTimeout(() => {\n      const wrapper = this.getElement('mat-form-field-wrapper');\n      const offset = this.elementRef.nativeElement.offsetHeight -\n        wrapper.offsetHeight -\n        parseFloat(getComputedStyle(wrapper).marginTop) -\n        parseFloat(getComputedStyle(wrapper).marginBottom) +\n        parseFloat(getComputedStyle(infix).height);\n\n      this.renderer.setStyle(infix, 'min-height', `${offset}px`);\n    });\n  }\n\n  private getElement(name: string): HTMLElement {\n    return this.elementRef.nativeElement.getElementsByClassName(name).item(0);\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { MatContenteditableDirective } from './mat-contenteditable.directive';\nimport { FormFieldSizerDirective } from './form-field-sizer.directive';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [ MatContenteditableDirective, FormFieldSizerDirective ],\n  exports: [ MatContenteditableDirective, FormFieldSizerDirective ],\n})\nexport class MatContenteditableModule { }\n","import { NgModule } from '@angular/core';\n\nimport { MatCkeditorDirective } from './mat-ckeditor.directive';\nimport { MatCkeditorBalloonDirective } from './mat-ckeditor-balloon.directive';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [ MatCkeditorDirective, MatCkeditorBalloonDirective ],\n  exports: [ MatCkeditorDirective, MatCkeditorBalloonDirective ],\n})\nexport class MatCkeditorModule { }\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\nfunction getText(html: string) {\n  if (html) {\n    const element = document.createElement('span');\n    element.innerHTML = html;\n    return element.textContent.replace(/\\s/g, '');\n  }\n  return '';\n}\n\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](/guide/form-validation)\n *\n * @publicApi\n */\nexport class HtmlValidators {\n\n  /**\n   * @description\n   * Validator that requires the control have a non-empty value.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field is non-empty\n   *\n   * ```typescript\n   * const control = new FormControl('', Validators.required);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map with the `required` property\n   * if the validation check fails, otherwise `null`.\n   *\n   */\n  static required(control: AbstractControl): ValidationErrors | null {\n    const text = getText(control.value);\n    return text ? null : { 'required': true };\n  }\n\n  /**\n   * @description\n   * Validator that requires the length of the control's value to be greater than or equal\n   * to the provided minimum length. This validator is also provided by default if you use the\n   * the HTML5 `minlength` attribute.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has a minimum of 3 characters\n   *\n   * ```typescript\n   * const control = new FormControl('ng', Validators.minLength(3));\n   *\n   * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n   * ```\n   *\n   * ```html\n   * <input minlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `minlength` if the validation check fails, otherwise `null`.\n   */\n  static minLength(minLength: number): ValidatorFn {\n    const fn = (control: AbstractControl): ValidationErrors | null => {\n      const text = getText(control.value);\n      if (text) {\n        return text.length < minLength ?\n          { 'minlength': { 'requiredLength': minLength, 'actualLength': text.length } } :\n          null;\n      }\n      return null;  // don't validate empty values to allow optional controls\n    };\n    return fn;\n  }\n\n  /**\n   * @description\n   * Validator that requires the length of the control's value to be less than or equal\n   * to the provided maximum length. This validator is also provided by default if you use the\n   * the HTML5 `maxlength` attribute.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has maximum of 5 characters\n   *\n   * ```typescript\n   * const control = new FormControl('Angular', Validators.maxLength(5));\n   *\n   * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n   * ```\n   *\n   * ```html\n   * <input maxlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `maxlength` property if the validation check fails, otherwise `null`.\n   */\n  static maxLength(maxLength: number): ValidatorFn {\n    const fn = (control: AbstractControl): ValidationErrors | null => {\n      const text = getText(control.value);\n      return text.length > maxLength ?\n        { 'maxlength': { 'requiredLength': maxLength, 'actualLength': text.length } } :\n        null;\n    };\n    return fn;\n  }\n}\n","/*\n * Public API Surface of mat-contenteditable\n */\n\nexport * from './lib/mat-contenteditable.directive';\nexport * from './lib/mat-ckeditor.directive';\nexport * from './lib/mat-ckeditor-balloon.directive';\nexport * from './lib/form-field-sizer.directive';\nexport * from './lib/mat-contenteditable.module';\nexport * from './lib/mat-ckeditor.module';\nexport * from './lib/validators';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}